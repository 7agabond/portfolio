---
import { readRepos } from "../services/github";
import { sections } from "../utils/info.json";
import Anchor from "./Anchor.astro";

const dontShow = ["portfolio", "manfred", "loannesdev"];
const githubData = await readRepos();

const projects = githubData.filter(
  ({ name, fork }) =>
    !Boolean(dontShow.find((value) => value === name)) && !fork
);
---

<section id="projects">
  <h1 class="section-title">{sections?.projects?.text}</h1>

  <div class="container">
    {
      projects.map(({ name, description, topics, html_url, homepage }) => {
        return (
          <fieldset class="card">
            <legend class="title-card">{name}</legend>

            {description && description.length && (
              <p class="description-card">{description}</p>
            )}

            {topics.length ? (
              <section class="topics-container">
                <h4 class="topics-title">Tecnologías usadas</h4>

                <div class="topics-group">
                  {topics.map((tech) => {
                    return <span class="topic">{tech}</span>;
                  })}
                </div>
              </section>
            ) : null}

            <footer class="footer-card">
              {html_url && html_url.length && (
                <Anchor url={html_url} goToAnotherWeb={true}>
                  Repositorio
                </Anchor>
              )}

              {homepage && homepage.length && (
                <Anchor url={homepage} goToAnotherWeb={true}>
                  Ver página
                </Anchor>
              )}
            </footer>
          </fieldset>
        );
      })
    }
  </div>
</section>

<style>
  section[id="projects"] {
    display: grid;
    gap: 0.2rem;
    width: 100%;

    & .container {
      column-gap: 0.5rem;
      column-count: auto;
      column-width: 20rem;

      & .card {
        border: 0.1rem solid var(--palette-grey);
        padding: 0.5rem 0.8rem;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        height: min-content;
        margin-bottom: 0.5rem;
        break-inside: avoid;
        border-radius: var(--border-radius-min);

        & .title-card {
          font-size: 1.3rem;
          margin-left: 5rem;
          text-align: center;
          font-weight: 600;
        }

        & .description-card {
          font-size: 1.125rem;
          word-break: break-word;
        }

        & .topics-container {
          display: flex;
          flex-direction: column;
          gap: 0.3rem;

          & .topics-title {
            font-size: 1.15rem;
            font-weight: bold;
          }

          & .topics-group {
            display: flex;
            gap: 0.3rem;
            flex-wrap: wrap;

            & .topic {
              background-color: var(--palette-grey);
              padding: 0.15rem 0.5rem;
              border-radius: 0.2rem;
              margin: 0;
            }
          }
        }

        & .footer-card {
          display: flex;
          justify-content: center;
          flex-wrap: wrap;
          word-break: keep-all;
          gap: 1rem;

          & :global(a) {
            padding: 0.3rem 0.6rem;
            border: 0.1rem solid var(--palette-grey);
            text-decoration: none;
            transition: 0.2s all ease;
            border-radius: var(--border-radius-min);

            :is(&:hover, &:active) {
              border-color: var(--palette-black);
              background-color: var(--palette-black);
              color: var(--palette-white);

              :is(.dark) & {
                border-color: var(--palette-white);
                background-color: var(--palette-white);
                color: var(--palette-black);
              }
            }
          }
        }
      }
    }
  }
</style>
